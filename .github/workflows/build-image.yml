name: Build, test and publish

on:
  push:
    branches: [ "**" ]
    tags: [ "v*.*.*" ]
  workflow_dispatch:
    inputs:
      go-version:
        default: "1.17"
        description: 'Go version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.image-output.outputs.image-tag }}
      image-name: ${{ steps.image-output.outputs.image-name }}
      image-digest: ${{ steps.image-output.outputs.image-digest }}

    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ github.event.inputs.go-version }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ github.event.inputs.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ github.event.inputs.go-version }}-

      - run: make envars-webhook

      - id: docker-tags
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/danfromtitan/envars-from-node-labels
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=${{ github.ref_name }}-

      - uses: docker/setup-buildx-action@v2
        id: buildx

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        id: docker-build
        with:
          context: ./
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-tags.outputs.tags }}
          labels: ${{ steps.docker-tags.outputs.labels }}

      - run: |
          export GOARCH=arm64
          make envars-webhook

      - uses: docker/build-push-action@v3
        id: docker-build
        with:
          context: ./
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-tags.outputs.tags }}
          labels: ${{ steps.docker-tags.outputs.labels }}

      - id: image-output
        run: |
          echo image-tag=$(echo '${{ steps.docker-build.outputs.metadata }}' | jq -r '."image.name" | split(",")[-1] | split(":")[-1]') >>$GITHUB_OUTPUT
          echo image-name=$(echo '${{ steps.docker-build.outputs.metadata }}' | jq -r '."image.name"') >>$GITHUB_OUTPUT
          echo image-digest=${{ steps.docker-build.outputs.digest }} >>$GITHUB_OUTPUT
